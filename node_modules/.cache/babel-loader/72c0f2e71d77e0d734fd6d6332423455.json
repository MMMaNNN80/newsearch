{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vyacheslav.Antonov\\\\Desktop\\\\\\u041F\\u041E\\u041B\\u0415\\u0417\\u041D\\u041E\\u0415\\\\\\u041F\\u0420\\u0418\\u041B\\u041E\\u0416\\u0415\\u041D\\u0418\\u042F\\\\SearchMySelf\\\\app\\\\src\\\\COMPONENTS\\\\GETCARDS.jsx\";\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GETCARDS({\n  state\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: /*#__PURE__*/_jsxDEV(CARDS, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n\n  function CARDS() {\n    if (state && state.req.length > 0) {\n      const mass = state.suggestions;\n      console.log(mass);\n      return mass.map((obj, num) => {\n        const shortname = obj.value;\n        const data = obj.data;\n        let color = [];\n        let branchStyle = {};\n        obj.key = num;\n        obj.req = state.req;\n        obj.count = state.count;\n\n        if (data.branch_type === 'MAIN') {\n          branchStyle = {\n            color: 'rgb(149, 156, 223)'\n          };\n        }\n\n        if (data.branch_type === 'BRANCH') {\n          ({\n            color: 'red'\n          });\n          branchStyle = {\n            color: 'red'\n          };\n        }\n\n        if (data.state && data.state.status === \"ACTIVE\") {\n          color = {\n            backgroundColor: \"green\"\n          };\n        } else if (data.state && data.state.liquidation_date) {\n          color = {\n            backgroundColor: \"red\"\n          };\n        } else {\n          color = {\n            backgroundColor: \"blue\"\n          };\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status \",\n            style: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reqv  lead\",\n            children: [\"\\u269D  \", ' ИНН: ' + data.inn + ' КПП: ' + (data.kpp ? data.kpp : '-') + ' ОГРН: ' + (data.ogrn ? data.ogrn : '-'), \" \\u269D\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orginfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"orgname lead\",\n              children: shortname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"orgform\",\n              style: { ...branchStyle\n              },\n              children: [\"\\u26F3  \", data.branch_type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"orgleader\",\n              children: !data.management ? '' : data.management.post.toLowerCase() + ': ' + data.management.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"orgaddress monospace lead\",\n              children: data.address.unrestricted_value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"divider  \",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this)]\n        }, obj.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }, this);\n      });\n    } else {\n      return '';\n    }\n  }\n}\n\n_c = GETCARDS;\nexport default GETCARDS;\n\nvar _c;\n\n$RefreshReg$(_c, \"GETCARDS\");","map":{"version":3,"sources":["C:/Users/Vyacheslav.Antonov/Desktop/ПОЛЕЗНОЕ/ПРИЛОЖЕНИЯ/SearchMySelf/app/src/COMPONENTS/GETCARDS.jsx"],"names":["React","useState","GETCARDS","state","CARDS","req","length","mass","suggestions","console","log","map","obj","num","shortname","value","data","color","branchStyle","key","count","branch_type","status","backgroundColor","liquidation_date","inn","kpp","ogrn","management","post","toLowerCase","name","address","unrestricted_value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,OAAO,YAAP;;;AAGA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA2B;AAE3B,sBACQ;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACF,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADR;;AAQI,WAASC,KAAT,GAAiB;AAGf,QAAGD,KAAK,IAAIA,KAAK,CAACE,GAAN,CAAUC,MAAV,GAAiB,CAA7B,EACA;AACA,YAAMC,IAAI,GAAGJ,KAAK,CAACK,WAAnB;AAEJC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAQA,IAAI,CAACI,GAAL,CAAU,CAACC,GAAD,EAAKC,GAAL,KACb;AACL,cAAMC,SAAS,GAAGF,GAAG,CAACG,KAAtB;AACA,cAAOC,IAAI,GAAGJ,GAAG,CAACI,IAAlB;AACA,YAAIC,KAAK,GAAC,EAAV;AACA,YAAKC,WAAW,GAAE,EAAlB;AACAN,QAAAA,GAAG,CAACO,GAAJ,GAAUN,GAAV;AACAD,QAAAA,GAAG,CAACP,GAAJ,GAAUF,KAAK,CAACE,GAAhB;AACAO,QAAAA,GAAG,CAACQ,KAAJ,GAAYjB,KAAK,CAACiB,KAAlB;;AACA,YAAKJ,IAAI,CAACK,WAAL,KAAoB,MAAzB,EAAiC;AAC/BH,UAAAA,WAAW,GAAE;AAACD,YAAAA,KAAK,EAAE;AAAR,WAAb;AACD;;AACD,YAAKD,IAAI,CAACK,WAAL,KAAoB,QAAzB,EAAoC;AAChC,WAAC;AAACJ,YAAAA,KAAK,EAAE;AAAR,WAAD;AACAC,UAAAA,WAAW,GAAE;AAACD,YAAAA,KAAK,EAAE;AAAR,WAAb;AACH;;AACD,YAAKD,IAAI,CAACb,KAAL,IAAca,IAAI,CAACb,KAAL,CAAWmB,MAAX,KAAsB,QAAzC,EAAmD;AAAGL,UAAAA,KAAK,GAAG;AAACM,YAAAA,eAAe,EAAC;AAAjB,WAAR;AAAkC,SAAxF,MACK,IAAIP,IAAI,CAACb,KAAL,IAAca,IAAI,CAACb,KAAL,CAAWqB,gBAA7B,EAAgD;AACjDP,UAAAA,KAAK,GAAG;AAACM,YAAAA,eAAe,EAAC;AAAjB,WAAR;AACH,SAFI,MAGC;AACFN,UAAAA,KAAK,GAAG;AAACM,YAAAA,eAAe,EAAC;AAAjB,WAAR;AACH;;AAIG,4BACO;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,SAAf;AAAyB,YAAA,KAAK,EAAIN;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAIG;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCAEU,WAAWD,IAAI,CAACS,GAAhB,GAAqB,QAArB,IAAgCT,IAAI,CAACU,GAAL,GAASV,IAAI,CAACU,GAAd,GAAkB,GAAlD,IAAyD,SAAzD,IAAsEV,IAAI,CAACW,IAAL,GAAYX,IAAI,CAACW,IAAjB,GAAsB,GAA5F,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJH,eAQK;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,wBACKb;AADL;AAAA;AAAA;AAAA;AAAA,oBADJ,eAIG;AAAK,cAAA,SAAS,EAAC,SAAf;AAAyB,cAAA,KAAK,EAAI,EAAC,GAAGI;AAAJ,eAAlC;AAAA,qCAEHF,IAAI,CAACK,WAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJH,eAUI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,wBAEN,CAACL,IAAI,CAACY,UAAN,GAAkB,EAAlB,GAAuBZ,IAAI,CAACY,UAAL,CAAgBC,IAAhB,CAAqBC,WAArB,KAAoC,IAApC,GAA2Cd,IAAI,CAACY,UAAL,CAAgBG;AAF5E;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAiBI;AAAK,cAAA,SAAS,EAAC,2BAAf;AAAA,wBACKf,IAAI,CAACgB,OAAL,CAAaC;AADlB;AAAA;AAAA;AAAA;AAAA,oBAjBJ,eAoBI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARL;AAAA,WAA6BrB,GAAG,CAACO,GAAjC;AAAA;AAAA;AAAA;AAAA,gBADP;AAmCI,OA7DA,CAAR;AAgEK,KArED,MAqEO;AAAE,aAAO,EAAP;AAAW;AAGP;AAAC;;KArFXjB,Q;AAsFS,eAAeA,QAAf","sourcesContent":["import React ,{useState}from 'react'\r\nimport '../App.css';\r\n\r\n\r\nfunction GETCARDS({state}) {\r\n\r\nreturn (\r\n        <div className=\"cards\">\r\n      <CARDS/>        \r\n        </div>\r\n    )\r\n\r\n\r\n  \r\n    function CARDS() {\r\n      \r\n\r\n      if(state && state.req.length>0)\r\n      { \r\n      const mass = state.suggestions\r\n\r\n  console.log(mass)\r\n  return  mass.map ((obj,num) => \r\n       { \r\n  const shortname = obj.value ;\r\n  const  data = obj.data; \r\n  let color=[];\r\n  let  branchStyle ={}\r\n  obj.key = num\r\n  obj.req = state.req\r\n  obj.count = state.count\r\n  if  (data.branch_type ==='MAIN') {\r\n    branchStyle ={color: 'rgb(149, 156, 223)'}\r\n  }\r\n  if  (data.branch_type ==='BRANCH')  {\r\n      ({color: 'red'})\r\n      branchStyle ={color: 'red'}\r\n  }\r\n  if ( data.state && data.state.status === \"ACTIVE\") {  color = {backgroundColor:\"green\"}}\r\n  else if (data.state && data.state.liquidation_date ) {\r\n      color = {backgroundColor:\"red\"}  \r\n  } \r\n  else  {\r\n      color = {backgroundColor:\"blue\"}  \r\n  } \r\n  \r\n  \r\n  \r\n      return (\r\n             <div className=\"card\" key = {obj.key}>\r\n                 <div className=\"status \" style = {color}></div>\r\n  \r\n  \r\n                <div className=\"reqv  lead\">\r\n  \r\n                &#9885;  {' ИНН: ' + data.inn +' КПП: '+ (data.kpp?data.kpp:'-') + ' ОГРН: ' + (data.ogrn ? data.ogrn:'-') } &#9885;\r\n                 </div>\r\n                  <div className=\"orginfo\">\r\n                      <div className=\"orgname lead\">\r\n                          {shortname}\r\n                      </div>\r\n                     <div className=\"orgform\" style = {{...branchStyle}}>\r\n                     &#9971;  { \r\n                  data.branch_type\r\n                         }\r\n                     </div>\r\n  \r\n                      <div className=\"orgleader\">\r\n                          {\r\n                !data.management? '' : data.management.post.toLowerCase() +': ' + data.management.name\r\n                          }\r\n                     </div>\r\n  \r\n  \r\n                      <div className=\"orgaddress monospace lead\">\r\n                          {data.address.unrestricted_value}\r\n                      </div>\r\n                      <div className=\"divider  \"> </div> \r\n                  </div>\r\n                   \r\n                  </div>\r\n       )\r\n                    \r\n         } \r\n  \r\n                  )\r\n      } else { return '';}\r\n     \r\n  \r\n                  }}\r\n                  export default GETCARDS;"]},"metadata":{},"sourceType":"module"}