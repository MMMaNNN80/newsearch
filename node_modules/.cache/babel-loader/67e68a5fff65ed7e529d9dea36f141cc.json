{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vyacheslav.Antonov\\\\Desktop\\\\\\u041F\\u041E\\u041B\\u0415\\u0417\\u041D\\u041E\\u0415\\\\\\u041F\\u0420\\u0418\\u041B\\u041E\\u0416\\u0415\\u041D\\u0418\\u042F\\\\SearchMySelf\\\\app\\\\src\\\\COMPONENTS\\\\CARD.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CARD({\n  state,\n  update,\n  setCardstate,\n  cardstate\n}) {\n  // console.log(state)\n  if (state) {\n    let mass = state;\n    return mass.map((obj, num) => {\n      const shortname = obj.value;\n      const data = obj.data;\n      let color = [];\n      let branchStyle = {};\n      obj.key = num;\n\n      if (data.branch_type === 'MAIN') {\n        //data.branch_type = 'Головная компания'\n        branchStyle = {\n          color: 'green'\n        };\n      }\n\n      if (data.branch_type === 'BRANCH') {\n        // data.branch_type = 'Филиал'\n        branchStyle = {\n          color: ' rgb(149, 156, 223)'\n        };\n      }\n\n      if (data.state && data.state.status === \"ACTIVE\") {\n        color = {\n          backgroundColor: \"green\"\n        };\n      } else if (data.state && data.state.liquidation_date) {\n        color = {\n          backgroundColor: \"red\"\n        };\n      } else {\n        color = {\n          backgroundColor: \"blue\"\n        };\n      }\n\n      const closeCards = () => {\n        update(null);\n      };\n\n      function setDataReport(key, e) //onClick\n      {\n        if (e === 'X') {\n          return;\n        } //если нажата кнопка закрытия окна\n        // если ни разу не нажимали до этого на подсказку\n\n\n        if (cardstate === 0) {\n          mass = mass.filter(el => el.key === key);\n          setCardstate(1); // ставим состояние карты 1 - для работы с ней\n\n          update(mass);\n          return;\n        }\n\n        if (cardstate === 1) {\n          console.log('Нажали для открытия карточки');\n          setCardstate(2);\n        }\n      }\n\n      function CARDORG() {\n        if (cardstate === 2) {\n          return;\n\n          /*#__PURE__*/\n          _jsxDEV(_Fragment, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"maincard\",\n              children: \"fdfdfd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 22\n            }, this), \" \"]\n          }, void 0, true);\n        }\n      }\n\n      function BTNCLOSE() {\n        if (cardstate > 0) return /*#__PURE__*/_jsxDEV(\"button\", {\n          name: \"X\",\n          className: 'btn cardbtn btn-danger',\n          onClick: closeCards,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this);\n        return null;\n      } ///////////*****************************************************************/////////////////////////////////////////////////////////////////////////////////////////////\n\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: e => {\n          setDataReport(obj.key, e.target.name);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status \",\n          style: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reqv  lead\",\n          children: [\"\\u269D  \", ' ИНН: ' + data.inn + ' КПП: ' + (data.kpp ? data.kpp : '-') + ' ОГРН: ' + (data.ogrn ? data.ogrn : '-'), \" \\u269D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orginfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orgname lead\",\n            children: shortname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orgform\",\n            style: { ...branchStyle\n            },\n            children: [\"\\u26F3  \", data.branch_type ? data.branch_type : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orgleader\",\n            children: !data.management ? '' : data.management.post.toLowerCase() + ': ' + data.management.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orgaddress monospace lead\",\n            children: [data.address.unrestricted_value, /*#__PURE__*/_jsxDEV(BTNCLOSE, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider  \",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(CARDORG, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 22\n        }, this)]\n      }, obj.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 18\n      }, this);\n    });\n  } else {\n    return null;\n  }\n}\n\n_c = CARD;\nexport default CARD;\n\nvar _c;\n\n$RefreshReg$(_c, \"CARD\");","map":{"version":3,"sources":["C:/Users/Vyacheslav.Antonov/Desktop/ПОЛЕЗНОЕ/ПРИЛОЖЕНИЯ/SearchMySelf/app/src/COMPONENTS/CARD.jsx"],"names":["React","CARD","state","update","setCardstate","cardstate","mass","map","obj","num","shortname","value","data","color","branchStyle","key","branch_type","status","backgroundColor","liquidation_date","closeCards","setDataReport","e","filter","el","console","log","CARDORG","BTNCLOSE","target","name","inn","kpp","ogrn","management","post","toLowerCase","address","unrestricted_value"],"mappings":"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","sourcesContent":["\r\nimport React  from \"react\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction CARD({state,update,setCardstate,cardstate}) {\r\n    \r\n   // console.log(state)\r\n   \r\n     if (state) {\r\n        let mass = state\r\n\r\n     return  mass.map((obj, num) => \r\n     {\r\n            const shortname = obj.value;\r\n            const data = obj.data;\r\n            let color = [];\r\n            let branchStyle = {}\r\n            obj.key = num\r\n            if (data.branch_type === 'MAIN') {         \r\n           //data.branch_type = 'Головная компания'\r\n             branchStyle = { color: 'green'}\r\n            }\r\n            if (data.branch_type === 'BRANCH') {\r\n               // data.branch_type = 'Филиал'\r\n                branchStyle = { color: ' rgb(149, 156, 223)' }\r\n                  \r\n            }\r\n            if (data.state && data.state.status === \"ACTIVE\") { color = { backgroundColor: \"green\" } }\r\n            else if (data.state && data.state.liquidation_date) {\r\n                color = { backgroundColor: \"red\" }\r\n            }\r\n            else {\r\n                color = { backgroundColor: \"blue\" }\r\n            }\r\n          \r\n\r\n            \r\n            const  closeCards= () => { update(null) }\r\n            \r\n            \r\n            \r\n            function setDataReport(key,e) //onClick\r\n            {\r\n                 if (e==='X') {return} //если нажата кнопка закрытия окна\r\n                \r\n                 // если ни разу не нажимали до этого на подсказку\r\n                if (cardstate===0) {\r\n                   mass = mass.filter(el=>el.key ===key)\r\n                   setCardstate(1) // ставим состояние карты 1 - для работы с ней\r\n                    update(mass)              \r\n                    return\r\n            } \r\n                  if (cardstate === 1) {\r\n                      console.log('Нажали для открытия карточки')\r\n                      setCardstate(2)\r\n                      }\r\n            } \r\n\r\n            function CARDORG () {\r\n                if (cardstate === 2){\r\n                 return \r\n                 (<> <div className=\"maincard\">\r\n                     fdfdfd\r\n                     </div> </>)\r\n\r\n                }\r\n            }\r\n\r\n            function BTNCLOSE (){\r\n                if(cardstate >0) return  (\r\n            <button name=\"X\" className ={'btn cardbtn btn-danger'} onClick={closeCards}  >&times;</button>) \r\n         return null;    \r\n        }\r\n\r\n///////////*****************************************************************/////////////////////////////////////////////////////////////////////////////////////////////\r\n         return (\r\n                 <div className=\"card\" key={obj.key}\r\n                     onClick={(e) => {\r\n                         setDataReport(obj.key,e.target.name)\r\n\r\n                     }}>\r\n                     <div className=\"status \" style={color}></div>\r\n\r\n\r\n                     <div className=\"reqv  lead\">\r\n\r\n                         &#9885;  {' ИНН: ' + data.inn + ' КПП: ' + (data.kpp ? data.kpp : '-') + ' ОГРН: ' + (data.ogrn ? data.ogrn : '-')} &#9885;\r\n                     </div>\r\n                     <div className=\"orginfo\">\r\n                         <div className=\"orgname lead\">\r\n                             {shortname}\r\n                         </div>\r\n                         <div className=\"orgform\" style={{ ...branchStyle }}>\r\n                             &#9971;  {\r\n                                 data.branch_type ? data.branch_type : ''\r\n                             }\r\n                         </div>\r\n\r\n                         <div className=\"orgleader\">\r\n                             {\r\n                                 !data.management ? '' : data.management.post.toLowerCase() + ': ' + data.management.name\r\n                             }\r\n                         </div>\r\n\r\n\r\n                         <div className=\"orgaddress monospace lead\">\r\n                             {data.address.unrestricted_value}\r\n\r\n                             <BTNCLOSE />\r\n                         </div>\r\n                     </div>\r\n\r\n                     <div className=\"divider  \"> </div>\r\n                     <CARDORG/>\r\n                 </div>\r\n\r\n           \r\n         )\r\n     }\r\n\r\n     )\r\n    } else { return null; }\r\n\r\n}\r\nexport default CARD;"]},"metadata":{},"sourceType":"module"}